version: "3"
services:
  postgres:
    image: "postgis/postgis:17-3.5"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "db"
    volumes:
      - "orgz:/data/postgres:/var/lib/postgresql/data"
    ports:
      - "5557:5432"
    networks:
      - "orgz"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: "5s"
      retries: "5"
  elasticsearch:
    image: "elasticsearch:8.11.3"
    depends_on:
      - "postgres"
    environment:
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "xpack.security.enabled=false"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - "orgz:/usr/share/elasticsearch/data"
    networks:
      - "orgz"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200/_cluster/health" ]
      interval: "10s"
      timeout: "5s"
      retries: "5"
  app:
    image: "ghcr.io/zerotworu/orgz/orgz:master"
    networks:
      - "orgz"
    depends_on:
      postgres:
        condition: "service_healthy"
      elasticsearch:
        condition: "service_healthy"
    environment:
      ORGZ_DATA_BASE_DSN: "postgresql+asyncpg://postgres:password@postgres:5432/db"
      ORGZ_API_KEY: "fkg7h"
      ORGZ_DATA_BASE_ECHO: "off" # on
      ORGZ_FORCE_RECREATE: "yes" # no
      ORGZ_LOG_LEVEL: "INFO"
      ORGZ_ELASTIC_HOST: "http://elasticsearch:9200"
      ORGZ_ES_INDEX_NAME: "orgz-index"
    ports:
      - "8000:8000"
volumes:
  orgz:
networks:
  orgz:
